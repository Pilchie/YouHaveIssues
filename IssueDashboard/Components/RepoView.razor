@using IssueDashboard.Data
@inject IssuesByRepository IssuesByRepository

@if (Repository == null)
{
    <em>Loading...</em>
}
else if (Repository.Exception != null)
{
    <h1>There was an error fetching this repository:</h1>
    <p>@Repository.Exception.ToString()</p>
}
else
{
    <div class="card-deck">
        @foreach (var m in Repository.Milestones)
        {
            <div class="card">
                <div class="card-body"><h5 class="card-title">@m.Name</h5></div>
            </div>
            foreach (var a in Repository.AllAreas)
            {
                <div class="card">
                    <div class="card-header">@a</div>
                    <div class="card-body"><h5 class="card-title">@(m.Areas.TryGetValue(a, out var area) ? area.Count : 0)</h5></div>
                </div>
            }

            <div class="w-100"></div>
        }
    </div>
}

@code {

    [Parameter] public string Organization { get; set; }

    [Parameter] public string Name { get; set; }

    protected Repository Repository { get; private set; }

    protected override async Task OnInitializedAsync()
    {
        Repository = await IssuesByRepository.GetRepository(Organization, Name);
    }
}
